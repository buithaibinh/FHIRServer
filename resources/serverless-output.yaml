AWSTemplateFormatVersion: '2010-09-09'
Globals:
  Api:
    EndpointConfiguration: REGIONAL
Outputs:
  ApiUrl:
    Description: URL for application
    Value:
      Fn::Sub: https://${FHIRServiceApi}.execute-api.${AWS::Region}.amazonaws.com/Prod
  FHIRInstanceBucket:
    Description: FHIR Instance bucket
    Value:
      Fn::GetAtt:
      - FHIRInstanceBucket
      - Arn
Parameters:
  LambdaAlias:
    Default: live
    Description: The alias used for live production traffic to the Lambda function.
    Type: String
  Stage:
    AllowedValues:
    - beta
    - gamma
    - prod
    Default: beta
    Description: Stage that can be added to resource names
    Type: String
Resources:
  FHIRBundleTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName:
        Fn::Sub: ${AWS::StackName}_FHIRBundle
    Type: AWS::DynamoDB::Table
  FHIRFunction:
    Properties:
      AutoPublishAlias:
        Ref: LambdaAlias
      CodeUri: s3://fhir-code-bucket/323356f370fefb480356a80245ba0c46
      Environment:
        Variables:
          FHIR_BUNDLE_TABLE:
            Ref: FHIRBundleTable
          FHIR_INSTANCE_BUCKET:
            Ref: FHIRInstanceBucket
          FHIR_OBSERVATION_TABLE:
            Ref: FHIRObservationTable
          FHIR_PATIENT_TABLE:
            Ref: FHIRPatientTable
          FHIR_RESOURCE_META_TABLE:
            Ref: FHIRResourceMetaTable
          VALIDATE_FHIR_RESOURCE: false
      Events:
        ProxyBundleGreedyResource:
          Properties:
            Method: ANY
            Path: /bundle/{proxy+}
            RestApiId:
              Ref: FHIRServiceApi
          Type: Api
        ProxyBundleResource:
          Properties:
            Method: ANY
            Path: /bundle
            RestApiId:
              Ref: FHIRServiceApi
          Type: Api
        ProxyObservationGreedyResource:
          Properties:
            Method: ANY
            Path: /observation/{proxy+}
            RestApiId:
              Ref: FHIRServiceApi
          Type: Api
        ProxyObservationResource:
          Properties:
            Method: ANY
            Path: /observation
            RestApiId:
              Ref: FHIRServiceApi
          Type: Api
        ProxyPatientGreedyResource:
          Properties:
            Method: ANY
            Path: /patient/{proxy+}
            RestApiId:
              Ref: FHIRServiceApi
          Type: Api
        ProxyPatientsResource:
          Properties:
            Method: ANY
            Path: /patient
            RestApiId:
              Ref: FHIRServiceApi
          Type: Api
      Handler: com.amazonaws.lab.LambdaHandler::handleRequest
      MemorySize: 512
      Policies:
        Statement:
        - Action:
          - s3:PutObject
          - s3:GetObject
          Effect: Allow
          Resource:
            Fn::Join:
            - ''
            - - 'arn:aws:s3:::'
              - Ref: FHIRInstanceBucket
              - /*
        - Action:
          - dynamodb:GetItem
          - dynamodb:Query
          - dynamodb:Scan
          - dynamodb:PutItem
          - s3:PutObject
          Effect: Allow
          Resource:
          - Fn::Sub:
            - arn:aws:dynamodb:*:*:table/${Table}/index/gender-createdDate-index
            - Table:
                Ref: FHIRPatientTable
          - Fn::Sub:
            - arn:aws:dynamodb:*:*:table/${Table}
            - Table:
                Ref: FHIRPatientTable
          - Fn::Sub:
            - arn:aws:dynamodb:*:*:table/${Table}
            - Table:
                Ref: FHIRObservationTable
          - Fn::Sub:
            - arn:aws:dynamodb:*:*:table/${Table}/index/patientRefId-index
            - Table:
                Ref: FHIRObservationTable
          - Fn::Sub:
            - arn:aws:dynamodb:*:*:table/${Table}
            - Table:
                Ref: FHIRBundleTable
          - Fn::Sub:
            - arn:aws:dynamodb:*:*:table/${Table}
            - Table:
                Ref: FHIRResourceMetaTable
        - Action:
          - logs:*
          Effect: Allow
          Resource:
          - '*'
      Runtime: java8
      Timeout: 300
    Type: AWS::Serverless::Function
  FHIRInstanceBucket:
    DeletionPolicy: Retain
    Properties:
      VersioningConfiguration:
        Status: Enabled
    Type: AWS::S3::Bucket
  FHIRInstanceBucketPolicy:
    DependsOn: FHIRInstanceBucket
    Properties:
      Bucket:
        Ref: FHIRInstanceBucket
      PolicyDocument:
        Statement:
        - Action:
          - s3:PutObject
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Resource:
            Fn::Sub: arn:aws:s3:::${FHIRInstanceBucket}/*
          Sid: Allow Lambda to put objects.
        Version: 2012-10-17
    Type: AWS::S3::BucketPolicy
  FHIRObservationTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      - AttributeName: patientRefId
        AttributeType: S
      GlobalSecondaryIndexes:
      - IndexName: patientRefId-index
        KeySchema:
        - AttributeName: patientRefId
          KeyType: HASH
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: '5'
          WriteCapacityUnits: '5'
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName:
        Fn::Sub: ${AWS::StackName}_FHIRObservation
    Type: AWS::DynamoDB::Table
  FHIRPatientTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      - AttributeName: gender
        AttributeType: S
      - AttributeName: createdDate
        AttributeType: S
      GlobalSecondaryIndexes:
      - IndexName: gender-createdDate-index
        KeySchema:
        - AttributeName: gender
          KeyType: HASH
        - AttributeName: createdDate
          KeyType: RANGE
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: '5'
          WriteCapacityUnits: '5'
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName:
        Fn::Sub: ${AWS::StackName}_FHIRPatient
    Type: AWS::DynamoDB::Table
  FHIRResourceMetaTable:
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      TableName:
        Fn::Sub: ${AWS::StackName}_FHIRResourceMeta
    Type: AWS::DynamoDB::Table
  FHIRServiceApi:
    Properties:
      DefinitionBody:
        definitions:
          Empty:
            title: Empty Schema
            type: object
        info:
          title:
            Ref: AWS::StackName
        paths:
          /bundle:
            x-amazon-apigateway-any-method:
              produces:
              - application/json+fhir
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${FHIRFunction}:${LambdaAlias}/invocations
          /bundle/{proxy+}:
            x-amazon-apigateway-any-method:
              parameters:
              - in: path
                name: proxy
                required: true
                type: string
              produces:
              - application/json+fhir
              responses: {}
              security:
              - fhir-service-auth: []
              x-amazon-apigateway-integration:
                cacheKeyParameters:
                - method.request.path.proxy
                cacheNamespace: cxnb8k
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${FHIRFunction}:${LambdaAlias}/invocations
          /observation:
            x-amazon-apigateway-any-method:
              produces:
              - application/json+fhir
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              security:
              - fhir-service-auth: []
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${FHIRFunction}:${LambdaAlias}/invocations
          /observation/{proxy+}:
            x-amazon-apigateway-any-method:
              parameters:
              - in: path
                name: proxy
                required: true
                type: string
              produces:
              - application/json+fhir
              responses: {}
              security:
              - fhir-service-auth: []
              x-amazon-apigateway-integration:
                cacheKeyParameters:
                - method.request.path.proxy
                cacheNamespace: do4k3j
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${FHIRFunction}:${LambdaAlias}/invocations
          /patient:
            x-amazon-apigateway-any-method:
              produces:
              - application/json+fhir
              responses:
                '200':
                  description: 200 response
                  schema:
                    $ref: '#/definitions/Empty'
              x-amazon-apigateway-integration:
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${FHIRFunction}:${LambdaAlias}/invocations
          /patient/{proxy+}:
            x-amazon-apigateway-any-method:
              parameters:
              - in: path
                name: proxy
                required: true
                type: string
              produces:
              - application/json+fhir
              responses: {}
              security:
              - fhir-service-auth: []
              x-amazon-apigateway-integration:
                cacheKeyParameters:
                - method.request.path.proxy
                cacheNamespace: 1q8fa9
                contentHandling: CONVERT_TO_TEXT
                httpMethod: POST
                passthroughBehavior: when_no_match
                responses:
                  default:
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${FHIRFunction}:${LambdaAlias}/invocations
        schemes:
        - https
        securityDefinitions:
          fhir-service-auth:
            in: header
            name: Authorization
            type: apiKey
            x-amazon-apigateway-authorizer:
              providerARNs:
              - Fn::GetAtt:
                - UserPool
                - Arn
              type: cognito_user_pools
            x-amazon-apigateway-authtype: cognito_user_pools
        swagger: '2.0'
      StageName: Prod
    Type: AWS::Serverless::Api
  UserPool:
    Properties:
      AutoVerifiedAttributes:
      - email
      Schema:
      - AttributeDataType: String
        Name: email
        Required: true
      - AttributeDataType: String
        Name: cc_confirmed
      UserPoolName:
        Ref: AWS::StackName
    Type: AWS::Cognito::UserPool
  UserPoolClient:
    Properties:
      ClientName:
        Fn::Sub: ${AWS::StackName}-UserPool
      ExplicitAuthFlows:
      - ADMIN_NO_SRP_AUTH
      GenerateSecret: false
      UserPoolId:
        Ref: UserPool
    Type: AWS::Cognito::UserPoolClient
Transform: AWS::Serverless-2016-10-31
